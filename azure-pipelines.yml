# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

variables:
  CCACHE_DIR: $(Pipeline.Workspace)/ccache
  #2020.1
  vcpkgGitRef: 7aebb481085de7387f8a9975652c26f9053f66df
  vcpkgArgs: nlohmann-json cpr cpprestsdk cpprestsdk[websockets] boost-serialization
  vcpkgLocation: '$(Build.SourcesDirectory)/vcpkg'

trigger:
- master
- development

jobs:
  - job: Windows_VS2019_UWP
    pool:
      vmImage: 'windows-latest'
    steps:
    - script: git clone https://github.com/Microsoft/vcpkg.git vcpkg
      displayName: Clone vcpkg git
    - task: Cache@2
      displayName: Cache vcpkg
      inputs:
        key: $(vcpkgArgs) | "$(vcpkgGitRef)"" | "$(Agent.OS)"
        path: '$(Build.BinariesDirectory)/vcpkg'
    - task: run-vcpkg@0
      displayName: 'Run vcpkg'
      inputs:
        vcpkgDirectory: '$(vcpkgLocation)'
        vcpkgArguments: $(vcpkgArgs)
        vcpkgGitCommitId: $(vcpkgGitRef)
        vcpkgTriplet: x86-windows
        vcpkgGitURL: https://github.com/microsoft/vcpkg.git

    - task: run-cmake@0
      displayName: 'Run CMake with Ninja (Debug)'
      enabled: true
      inputs:
        cmakeListsOrSettingsJson: 'CMakeListsTxtBasic'
        cmakeListsTxtPath: 'CMakeLists.txt'
        useVcpkgToolchainFile: true
        cmakeGenerator: 'Ninja'
        buildDirectory: $(Build.ArtifactStagingDirectory)/Windows_VS2019_x86
        buildWithCMakeArgs: '-- -v -A x86'
#    - task: MSBuild@1
#      inputs:
#        solution: 'build/ALL_BUILD.vcxproj'
#        maximumCpuCount: true
#        platform: 'x86'

  #-job: Windows_VS2019_UWP

#steps:
#- bash: |
#    sudo apt-get install ccache -y
#    echo "##vso[task.prependpath]/usr/libccache"
#  displayName: 'Install ccache and update PATH to use linked versions of gcc, cc, etc'
#- task: Cache@2
#  inputs:
#    key: 'ccache | "$(Agent.OS)"'
#    path: $(CCACHE_DIR)
#  displayName: 'ccache'
#- task: Cache@2
#  displayName: Cache vcpkg
#  inputs:
#    key: $(Build.SourcesDirectory)/cmakelists.txt/vcpkg_x64-windows.txt | $(Build.SourcesDirectory)/.git/modules/vcpkg/HEAD | "$(Agent.OS)" | "VS2019"
#    path: '$(Build.SourcesDirectory)/vcpkg'
#- script: |
#    git clone https://github.com/Microsoft/vcpkg.git $(Build.SourcesDirectory)/vcpkg
#    cd $(Build.SourcesDirectory)/vcpkg
#    ./bootstrap-vcpkg.sh
#    ./vcpkg integrate install
#    ./vcpkg update
#    ./vcpkg install nlohmann-json cpr cpprestsdk cpprestsdk[websockets] boost-serialization
#    cd ../
#    mkdir build
#    cd build
#    cmake .. -DCMAKE_TOOLCHAIN_FILE=/home/appveyor/projects/discordpp/vcpkg/scripts/buildsystems/vcpkg.cmake
#    make
#  displayName: 'Compile'

#- script: |
#    echo Add other tasks to build, test, and deploy your project.
#    echo See https://aka.ms/yaml
#  displayName: 'Compile'
# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  - master
  - development

jobs:
  - job: Windows_VS2019_x64
    pool:
      vmImage: 'windows-latest'
    steps:
      - script: git submodule update --recursive --init
        displayName: Checkout submodules recursively
      #- task: Cache@2
      #  displayName: Cache vcpkg
      #  inputs:
      #    key: 'version_3 | "$(Agent.OS)"'
      #    path: '$(vcpkgLocation)'
      - task: ChocolateyCommand@0
        inputs:
          command: 'install'
          installPackageId: 'openssl'
          installInstallArgs: '-y'
      - task: run-cmake@0
        displayName: 'Run CMake with Ninja'
        enabled: true
        inputs:
          cmakeListsOrSettingsJson: 'CMakeListsTxtBasic'
          cmakeListsTxtPath: '$(Build.SourcesDirectory)/CMakeLists.txt'
          useVcpkgToolchainFile: false
          buildDirectory: '$(Build.ArtifactStagingDirectory)'
          buildWithCMakeArgs: '-- -v'
  - job: Linux_Latest
    pool:
      vmImage: 'ubuntu-latest'
    steps:
      - script: git submodule update --recursive --init
        displayName: Checkout submodules recursively
      #- task: Cache@2
      #  displayName: Cache vcpkg
      #  inputs:
      #    key: 'version_3 | "$(Agent.OS)"'
      #    path: '$(vcpkgLocation)'

      - task: run-cmake@0
        displayName: 'Run CMake'
        enabled: true
        inputs:
          cmakeListsOrSettingsJson: 'CMakeListsTxtBasic'
          cmakeListsTxtPath: '$(Build.SourcesDirectory)/CMakeLists.txt'
          useVcpkgToolchainFile: false
          buildDirectory: '$(Build.ArtifactStagingDirectory)'
          buildWithCMakeArgs: '-- -v'